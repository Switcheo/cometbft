syntax = "proto3";
package Switcheo.carbon.oracle;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1
import "Switcheo/carbon/oracle/oracle.proto";

option go_package                      = "github.com/cometbft/cometbft/oracle/types";
option (gogoproto.goproto_getters_all) = false;

// Query defines the gRPC querier service.
service Query {
  // Get details for all oracles
  rpc OracleAll(QueryAllOracleRequest) returns (QueryAllOracleResponse) {
    option (google.api.http).get = "/carbon/oracle/v1/oracles";
  }

  // Get results for all oracles, or a specific oracle
  rpc Results(QueryResultsRequest) returns (QueryResultsResponse) {
    option (google.api.http) = {
      get : "/carbon/oracle/v1/results/{oracle_id}"
      additional_bindings {get : "/carbon/oracle/v1/results"}
    };
  }
  
}

message QueryAllOracleRequest {}

message QueryAllOracleResponse {
  repeated Oracle                        oracles    = 1 [(gogoproto.nullable) = false];
}

message QueryResultsRequest {
  string oracle_id = 1;
}

message QueryResultsResponse {
  repeated Result results = 1 [ (gogoproto.nullable) = false ];
}
